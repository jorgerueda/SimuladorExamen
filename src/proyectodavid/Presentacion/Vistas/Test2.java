/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectodavid.Presentacion.Vistas;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.ListIterator;
import java.util.Observable;
import java.util.Observer;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import proyectodavid.Negocio.Categoria.Categoria;
import proyectodavid.Negocio.Categoria.SA.SACategoriaImp;
import proyectodavid.Negocio.Cronometro;
import proyectodavid.Negocio.OrdenPregunta;
import proyectodavid.Negocio.Pregunta.Pregunta;
import proyectodavid.Negocio.Pregunta.SA.SAPreguntaImp;
import proyectodavid.Negocio.StopWatch;
import proyectodavid.Negocio.Usuario.ClavesUsuarioPregunta;
import proyectodavid.Negocio.Usuario.Usuario;
import proyectodavid.Negocio.Usuario.UsuarioPregunta;
import proyectodavid.Presentacion.Controlador.Evento;
import proyectodavid.Presentacion.Controlador.Imp.ControladorImp;
/**
 *
 * @author jorgerueda
 */
public class Test2 extends javax.swing.JFrame implements Vista, Observer {

    /**
     * Creates new form Test
     */
    public Test2(Usuario usr, boolean correccion) {
        initComponents();
        reset (usr,correccion);
    }
    public Test2() {
        initComponents();
        iniciarCrono(15);
        ///agregarImagen();
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new proyectodavid.Presentacion.NoneSelectedButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        A = new javax.swing.JToggleButton();
        C = new javax.swing.JToggleButton();
        B = new javax.swing.JToggleButton();
        D = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPregunta = new javax.swing.JTextArea();
        jPanelConFondo1 = new proyectodavid.Presentacion.JPanelConFondo();
        jLabelPruebaImg1 = new javax.swing.JLabel();
        jLabelPruebaImg2 = new javax.swing.JLabel();
        jButtonPreguntaSinContestar = new javax.swing.JButton();
        jButtonSiguientePregunta = new javax.swing.JButton();
        jButtonAnteriorPregunta = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldNumPregunta = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldPreguntasTotales = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldPendientes = new javax.swing.JTextField();
        jTextFieldContestadads = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabelCategoria = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelUser = new javax.swing.JLabel();
        jTextAreaPuntuacion = new javax.swing.JTextArea();
        jButtonAnteriorPreguntaSin = new javax.swing.JButton();
        jButtonSaltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(1332, 700));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        A.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(A);
        A.setToolTipText("");
        A.setName(""); // NOI18N
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        C.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(C);
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        B.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(B);
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        D.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(D);
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextAreaPregunta.setEditable(false);
        jTextAreaPregunta.setBackground(new java.awt.Color(255, 0, 0));
        jTextAreaPregunta.setColumns(20);
        jTextAreaPregunta.setLineWrap(true);
        jTextAreaPregunta.setRows(5);
        jTextAreaPregunta.setWrapStyleWord(true);
        jTextAreaPregunta.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextAreaPregunta);

        jPanelConFondo1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelConFondo1.setToolTipText("");
        jPanelConFondo1.setMinimumSize(new java.awt.Dimension(649, 459));
        jPanelConFondo1.setPreferredSize(new java.awt.Dimension(649, 459));

        javax.swing.GroupLayout jPanelConFondo1Layout = new javax.swing.GroupLayout(jPanelConFondo1);
        jPanelConFondo1.setLayout(jPanelConFondo1Layout);
        jPanelConFondo1Layout.setHorizontalGroup(
            jPanelConFondo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConFondo1Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(jLabelPruebaImg1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelPruebaImg2)
                .addGap(213, 213, 213))
        );
        jPanelConFondo1Layout.setVerticalGroup(
            jPanelConFondo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConFondo1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConFondo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConFondo1Layout.createSequentialGroup()
                        .addComponent(jLabelPruebaImg2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(453, 453, 453))
                    .addGroup(jPanelConFondo1Layout.createSequentialGroup()
                        .addComponent(jLabelPruebaImg1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(C, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(D, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanelConFondo1, javax.swing.GroupLayout.DEFAULT_SIZE, 1332, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelConFondo1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(A, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(B, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(C, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(D, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jPanelConFondo1.getAccessibleContext().setAccessibleName("");

        jButtonPreguntaSinContestar.setText("Última");
        jButtonPreguntaSinContestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreguntaSinContestarActionPerformed(evt);
            }
        });

        jButtonSiguientePregunta.setText("Anterior");
        jButtonSiguientePregunta.setSize(new java.awt.Dimension(83, 32));
        jButtonSiguientePregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguientePreguntaActionPerformed(evt);
            }
        });

        jButtonAnteriorPregunta.setText("Primera");
        jButtonAnteriorPregunta.setSize(new java.awt.Dimension(83, 32));
        jButtonAnteriorPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorPreguntaActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tiempo (en minutos)"));

        jLabel2.setText("Transcurrido");

        jLabel3.setText("Restante");

        jTextField1.setEditable(false);

        jTextField2.setEditable(false);

        jTextField3.setEditable(false);

        jLabel9.setText("Total");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(163, 163, 163)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(153, 153, 153)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Preguntas"));

        jLabel11.setText("Pregunta");

        jTextFieldNumPregunta.setEditable(false);

        jLabel12.setText("Totales");

        jTextFieldPreguntasTotales.setEditable(false);

        jLabel13.setText("Pendientes");

        jTextFieldPendientes.setEditable(false);

        jTextFieldContestadads.setEditable(false);

        jLabel14.setText("Contestadas");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNumPregunta)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldPreguntasTotales)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addGap(71, 71, 71)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldContestadads))
                .addGap(58, 58, 58)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldPendientes, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldContestadads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPendientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPreguntasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jLabelCategoria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel8.setText("Usuario:");

        jTextAreaPuntuacion.setEditable(false);
        jTextAreaPuntuacion.setColumns(20);
        jTextAreaPuntuacion.setRows(5);
        jTextAreaPuntuacion.setOpaque(false);

        jButtonAnteriorPreguntaSin.setText("Siguiente");
        jButtonAnteriorPreguntaSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorPreguntaSinActionPerformed(evt);
            }
        });

        jButtonSaltar.setText("Saltar Categoría");
        jButtonSaltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(636, 636, 636))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextAreaPuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(283, 283, 283)
                        .addComponent(jLabelCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonAnteriorPregunta)
                .addGap(169, 169, 169)
                .addComponent(jButtonSiguientePregunta)
                .addGap(174, 174, 174)
                .addComponent(jButtonAnteriorPreguntaSin)
                .addGap(133, 133, 133)
                .addComponent(jButtonPreguntaSinContestar)
                .addGap(128, 128, 128)
                .addComponent(jButtonSaltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(jLabelCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextAreaPuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnteriorPreguntaSin)
                    .addComponent(jButtonSiguientePregunta)
                    .addComponent(jButtonAnteriorPregunta)
                    .addComponent(jButtonPreguntaSinContestar)
                    .addComponent(jButtonSaltar))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        System.out.println("pulso");
        if(!correccionMode){
           cambiaColor();
            guardarSolucionMarcada();
        }else{
           this.A.setSelected(false);
        }
    }//GEN-LAST:event_AActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        if(!correccionMode){
           cambiaColor();
            guardarSolucionMarcada();
        }else{
           this.B.setSelected(false);
        }
    }//GEN-LAST:event_BActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
         if(!correccionMode){
            cambiaColor();
            guardarSolucionMarcada();
        }else{
           this.C.setSelected(false);
        }
    }//GEN-LAST:event_CActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
       if(!correccionMode){
            cambiaColor();
            guardarSolucionMarcada();
        }else{
           this.D.setSelected(false);
        }
    }//GEN-LAST:event_DActionPerformed

    private void jButtonSiguientePreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguientePreguntaActionPerformed

        actualizar(1,null);

    }//GEN-LAST:event_jButtonSiguientePreguntaActionPerformed

    private void jButtonAnteriorPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorPreguntaActionPerformed
        actualizar(-1,null);
    }//GEN-LAST:event_jButtonAnteriorPreguntaActionPerformed

    private void jButtonPreguntaSinContestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreguntaSinContestarActionPerformed
        //removeAll();
        //this.repaint();
        this.remove(this.jPanel3);
        this.remove(this.jPanel1);
        this.remove(this.jPanel4);
        this.remove(this.jButtonAnteriorPregunta);
        this.remove(this.jButtonAnteriorPreguntaSin);
        this.remove(this.jButtonPreguntaSinContestar);
        this.remove(this.jButtonSiguientePregunta);
        this.remove(this.jPanelConFondo1);
        this.remove(this.jTextAreaPuntuacion);
        this.remove(this.jLabelCategoria);
        this.remove(this.jLabelUser);
        this.remove(this.jLabel8);  
        this.initComponents2();
        reset (user,this.correccionMode);

        /*int i =siguientePreguntaSinContestar();
      System.out.println(i);
        if (i!=-1){
            
            indexPregunta=i;
            System.out.println(indexPregunta);
            actualizar(-2,null);
        }
       */ 
        
    }//GEN-LAST:event_jButtonPreguntaSinContestarActionPerformed

    private void jButtonAnteriorPreguntaSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorPreguntaSinActionPerformed
       /* int i =anteriorPreguntaSinContestar();
         
        if (i!=-1){
            
            indexPregunta=i;
            System.out.println(indexPregunta);
            actualizar(-2,null);
        }

        */
      
        this.remove(this.jPanel3);
        this.remove(this.jPanel1);
        this.remove(this.jPanel4);
        this.remove(this.jButtonAnteriorPregunta);
        this.remove(this.jButtonAnteriorPreguntaSin);
        this.remove(this.jButtonPreguntaSinContestar);
        this.remove(this.jButtonSiguientePregunta);
        this.remove(this.jPanelConFondo1);
        this.remove(this.jTextAreaPuntuacion);
        this.remove(this.jLabelCategoria);
        this.remove(this.jLabelUser);
        this.remove(this.jLabel8);  
        this.initComponents();
        reset (user,this.correccionMode);
        

    }//GEN-LAST:event_jButtonAnteriorPreguntaSinActionPerformed

    private void jButtonSaltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaltarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSaltarActionPerformed

    
    //new Color(207, 235, 197)
    
    private void cambiaColor(){
        A.setBackground(new java.awt.Color(245, 245, 245));
        C.setBackground(new java.awt.Color(245, 245, 245));
        B.setBackground(new java.awt.Color(245, 245, 245));
        D.setBackground(new java.awt.Color(245, 245, 245));
        if (A.isSelected()){
        A.setBackground(Color.yellow);      
         }else if(C.isSelected()){
        C.setBackground(Color.yellow);
         }else if (B.isSelected()){
        B.setBackground(Color.yellow);
         }else if (D.isSelected()){
        D.setBackground(Color.yellow);
         }
    } 
    
    
    
    private void mostrarSolucion(){
        
       String solution =  listaPreguntas.get(indexPregunta).getIdPregunta().getSolucion();
       String solutionU=  listaPreguntas.get(indexPregunta).getSolucionUser();
       A.setBackground(new java.awt.Color(245, 245, 245));
       C.setBackground(new java.awt.Color(245, 245, 245));
       B.setBackground(new java.awt.Color(245, 245, 245));
       D.setBackground(new java.awt.Color(245, 245, 245));
       
        
       if (solutionU!=null){
           switch (solutionU) {
               case "A":
                   A.setBackground(Color.RED);
                   break;
               case "B":
                   B.setBackground(Color.RED);
                   break;
               case "C":
                   C.setBackground(Color.RED);
                   break;
               case "D":
                   D.setBackground(Color.RED);
                   break;
               default:
                   break;
           }
       }
       switch (solution) {
            case "A":
                A.setBackground(new java.awt.Color(51,204,0));
                break;
            case "B":
                B.setBackground(new java.awt.Color(51,204,0));
                break;
            case "C":
                C.setBackground(new java.awt.Color(51,204,0));
                break;
            case "D":
                D.setBackground(new java.awt.Color(51,204,0));
                break;
            default:
                break;
        }
        
    }
    
    private void iniciarCrono(int limit){
        
        Cronometro crono = new Cronometro(jTextField2,limit);
        crono.addObserver(this);
        StopWatch stopwatch = new StopWatch(jTextField3,limit);
        jTextField1.setText("00:"+String.valueOf(limit)+":00");
        
    }
    
    private ImageIcon redimensionarImagen(ImageIcon image){
        int scale = 3/2;  
            
        int width = image.getIconWidth();  
        int height = image.getIconHeight();  
        BufferedImage buffer = new BufferedImage(scale * width, scale * height, BufferedImage.TYPE_INT_ARGB);  
        Graphics2D graphics = buffer.createGraphics();  
        graphics.scale(scale,scale);  
        image.paintIcon(null, graphics, 0, 0);  
        graphics.dispose();  
        ImageIcon ii = new ImageIcon(buffer);
        return ii; 
    }
        
    
    private void agregarImagen(){
    Pregunta preg=listaPreguntas.get(indexPregunta).getIdPregunta() ;
    if (preg.getPhoto1()!=null){
        if(preg.getPhoto2()!=null){
            jLabelPruebaImg1.setIcon(new javax.swing.ImageIcon(preg.obtenerImagen1()));
            jLabelPruebaImg2.setIcon(new javax.swing.ImageIcon(preg.obtenerImagen2()));  
        }else{
            
            if(preg.getCategoria().getNombre().equalsIgnoreCase("PSICOTECNICA")){
            //jLabelPruebaImg1.setIcon(new javax.swing.ImageIcon(preg.obtenerImagen1()));
            this.jPanelConFondo1.setImagen(preg.obtenerImagen1());
            jLabelPruebaImg2.setIcon(null);  
            }else{
             this.jPanelConFondo1.setImagen(preg.obtenerImagen1());
            }
            
            // this.jLabelPruebaImg1.setIcon(new javax.swing.ImageIcon(preg.obtenerImagen1()));
        }
        
   
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test2(null,false).setVisible(true);

            }
        });
    }
    
    public void cargarPreguntas(){
        
     Collection<Categoria> categorias= new SACategoriaImp().mostrarCategorias();
        
      for (Categoria c: categorias){
       listaP.addAll(new SAPreguntaImp().PreguntasRandomByCategoria(c.getNombre(), c.getNumeroPreguntas())); 
      }  
    
    for (Pregunta p:listaP){
      
  
        UsuarioPregunta up = new UsuarioPregunta();
        ClavesUsuarioPregunta cup = new ClavesUsuarioPregunta();
        up.setIdPregunta(p);
        up.setIdUsuario(user);
        cup.setIdPRegunta(p.getId());
        cup.setIdUsuario(user.getId());
        up.setClaves(cup);
        listaPreguntas.add(up);
        listaOrdenPreguntas.add(OrdenRandomBotones());
        
    }
    
    }
   
    public OrdenPregunta OrdenRandomBotones(){
        List <String> list = new ArrayList<>();
        list.add("A");
        list.add("B");
        list.add("C");
        list.add("D");
        List <String> listRandom= new ArrayList<>();
        while (!list.isEmpty()){
        int random=(int) (Math.random() * list.size());
        listRandom.add(list.get(random));
        list.remove(random);
        }
        OrdenPregunta op = new OrdenPregunta(listRandom);
        return op;
        
        
    }
    
    
    
    public void cargarRespuestas(){
        
     listaPreguntas.addAll(user.getLista_preguntas());  
     
    Collections.sort(listaPreguntas, new Comparator() {
         @Override
         public int compare(Object o1, Object o2) {
             UsuarioPregunta p1,p2;
             p1=(UsuarioPregunta)o1;
             p2=(UsuarioPregunta) o2;
            return new Integer(p1.getIdPregunta().getCategoria().getOrden()).compareTo(new Integer(p2.getIdPregunta().getCategoria().getOrden()));         }
     });
    }
    
    
    public void mostrarPreguntaCorrecion(){
        
        this.jTextAreaPregunta.setText(listaPreguntas.get(indexPregunta).getIdPregunta().getPregunta());
        this.A.setText(wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getA()));
        this.B.setText(wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getB()));
        this.C.setText(wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getC()));
        this.D.setText(wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getD()));
        agregarImagen();
        if(!this.correccionMode){
        if(listaPreguntas.get(indexPregunta).getSolucionUser()!=null){
            switch (listaPreguntas.get(indexPregunta).getSolucionUser()) {
                case "A":
                    this.A.setSelected(true);
                    break;
                case "B":
                    this.B.setSelected(true);
                    break;
                case "C":
                    this.C.setSelected(true);
                    break;
                case "D":
                    this.D.setSelected(true);
                    break;
                default:
                    break;
            }
        }
        }
    }
    
      public void mostrarPregunta(){
        
        this.jTextAreaPregunta.setText(listaPreguntas.get(indexPregunta).getIdPregunta().getPregunta());
        this.A.setText(obtenerTextoRespuesta(listaOrdenPreguntas.get(indexPregunta).getA()));
        this.B.setText(obtenerTextoRespuesta(listaOrdenPreguntas.get(indexPregunta).getB()));
        this.C.setText(obtenerTextoRespuesta(listaOrdenPreguntas.get(indexPregunta).getC()));
        this.D.setText(obtenerTextoRespuesta(listaOrdenPreguntas.get(indexPregunta).getD()));
        agregarImagen();
        if(!this.correccionMode){
        if(listaOrdenPreguntas.get(indexPregunta).getSelected()!=null){
            switch (listaOrdenPreguntas.get(indexPregunta).getSelected()) {
                case "A":
                    this.A.setSelected(true);
                    break;
                case "B":
                    this.B.setSelected(true);
                    break;
                case "C":
                    this.C.setSelected(true);
                    break;
                case "D":
                    this.D.setSelected(true);
                    break;
                default:
                    break;
            }
        }
        }
    }
    
     public String obtenerTextoRespuesta(String orden){
         String r;
         switch(orden){
             case "A":
                    r= wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getA());
                    break;
                case "B":
                    r= wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getB());
                    break;
                case "C":
                    r= wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getC());
                    break;
                case "D":
                    r= wrapText(listaPreguntas.get(indexPregunta).getIdPregunta().getD());
                    break;
                default:
                    r=null;
                    break;
            
             
         }
          return r;
         
         
     } 
    public String obtenerSolucionMarcada(){
       /*  if (this.A.isSelected()){
             return "A";
         }else if(this.B.isSelected()){
             return "B";
         }else if(this.C.isSelected()){
             return "C";
         }else if(this.D.isSelected()){
             return "D";
         }else{
             return null;
         }
        */
       
       if (this.A.isSelected()){
             listaOrdenPreguntas.get(indexPregunta).setSelected("A");
             return listaOrdenPreguntas.get(indexPregunta).getA();
         }else if(this.B.isSelected()){
            listaOrdenPreguntas.get(indexPregunta).setSelected("B");
            return listaOrdenPreguntas.get(indexPregunta).getB();
         }else if(this.C.isSelected()){
             listaOrdenPreguntas.get(indexPregunta).setSelected("C");
            return listaOrdenPreguntas.get(indexPregunta).getC();
         }else if(this.D.isSelected()){
             listaOrdenPreguntas.get(indexPregunta).setSelected("D");
            return listaOrdenPreguntas.get(indexPregunta).getD();
         }else{
             return null;
         }
        
        
    }
    
    public void pruebaColor(){
        
        UIManager.put("ToggleButton.select",new java.awt.Color(51,204,0));
        UIManager.put("NoneSelectedButtonGroup.select",new java.awt.Color(51,204,0));
        SwingUtilities.updateComponentTreeUI(this.A);        
        
    }
    public void guardarSolucionMarcada(){
        String sol= obtenerSolucionMarcada();
        
        listaPreguntas.get(indexPregunta).setSolucionUser(obtenerSolucionMarcada());
        //Se comprueba si ya habia una respuesta en esa pregunta, si no la habia, se cambia y se incrementa las contestadas.
        if (sol!=null){ 
        if (listaContestadas.isEmpty()||!listaContestadas.get(indexPregunta)){
            
            listaContestadas.set(indexPregunta,true);
             
            this.preguntasContestadas++;
            this.jTextFieldContestadads.setText(String.valueOf(this.preguntasContestadas));
             }
        
        }else if (!listaContestadas.isEmpty()||listaContestadas.get(indexPregunta)){
          
            listaContestadas.set(indexPregunta,false);
             
            this.preguntasContestadas--;
            this.jTextFieldContestadads.setText(String.valueOf(this.preguntasContestadas));
        }

        System.out.print(sol);
        
    }
    
    //Devuelve el indice de la siguiente pregunta sin contestar
    public int siguientePreguntaSinContestar(){
       /*int  total= indexPrimera + this.totalPreguntas;
       int numP=1;
        for (int i= indexPrimera;i<total;i++){
           if(!listaContestadas.get(i)){
               this.numPregunta=numP;
               return i;
               
           }
            numP++;
        }
        return -1;*/
        int numI=indexPregunta+1;
        if(numPregunta==this.totalPreguntas){
        }else{
        
        for (int i= numPregunta+1;i<=this.totalPreguntas;i++){
            
           if(!listaContestadas.get(numI)){
               this.numPregunta=i;
               return numI;
           }
            numI++;
        }
        }
        return -1;
    }
    
    
    //Devuelve el indice de la anterior pregunta sin contestar
    public int anteriorPreguntaSinContestar(){
        int numI=indexPregunta-1;
        if(numPregunta==1){
        }else{
        for (int i= numPregunta-1;i>=minPregunta;i--){
            
           if(!listaContestadas.get(numI)){
               this.numPregunta=i;
               return numI;
           }
            numI--;
        }
        }
        return -1;
        
    }
    
    public void calcularPuntuacion(){
        int index=indexPrimera;
        double puntuacion=0;
       for (int i=0;i<totalPreguntas;i++){
           if(listaPreguntas.get(index).getSolucionUser()==null){
               
           }
           else if( listaPreguntas.get(index).getSolucionUser().equals(listaPreguntas.get(index).getIdPregunta().getSolucion())){
             puntuacion = puntuacion + listaPreguntas.get(index).getIdPregunta().getCategoria().getAcierto();
               
           }else{
             puntuacion = puntuacion + listaPreguntas.get(index).getIdPregunta().getCategoria().getFallo();
           }
           
       index++;   
       } 
       index=indexPrimera;
       if(puntuacion >=listaPreguntas.get(index).getIdPregunta().getCategoria().getNotaMinima()){
           for (int i=0;i<totalPreguntas;i++){
               
               listaPreguntas.get(index).setAprobado(true);
               
              index++;   
           }
           
           
       }else{
           
           for (int i=0;i<totalPreguntas;i++){
               
               listaPreguntas.get(index).setAprobado(false);
               
              index++;   
           }
           
           
       }
       
       
        
    }
    
    private Boolean calcularPuntuacionFinal(){
        
        Boolean aprobado = true;
        for (UsuarioPregunta usrP : listaPreguntas){
            
           if(!usrP.getAprobado()){
            aprobado = false;  
            return aprobado;   
           }
            
        }
        
        return aprobado;
    }
    
     private String wrapText(String string){
        
            //Return string initialized with opening html tag
            String returnString="<html>";

            //Get max width of text line
           // int maxLineWidth = new ImageIcon("Images/buttonBackground.png").getIconWidth()-10;
              int maxLineWidth = this.A.getWidth()-35;
            //Create font metrics
            FontMetrics metrics = this.getFontMetrics(new Font("Helvetica Neue", Font.PLAIN, 15));

            //Current line width
            int lineWidth=0;

            //Iterate over string
            StringTokenizer tokenizer = new StringTokenizer(string," ");
            while (tokenizer.hasMoreElements()) {
                String word = (String) tokenizer.nextElement(); 
                int stringWidth = metrics.stringWidth(word);

                //If word will cause a spill over max line width
                if (stringWidth+lineWidth>=maxLineWidth) {

                    //Add a new line, add a break tag and add the new word
                    returnString=(returnString+"<br>"+word);

                    //Reset line width
                    lineWidth=0;
                }else{

                    //No spill, so just add to current string
                    returnString=(returnString+" "+word);
                }
                //Increase the width of the line
                lineWidth+=stringWidth;
            }

            //Close html tag
            returnString=(returnString+"<html>");

            //Return the string
            return returnString;
        }
     
     public void reset(Usuario usr, Boolean correccion){
         user = usr;
        this.correccionMode=correccion;
        
        //// si no hay preguntas se cargan////
        if(!correccionMode){
        if (listaPreguntas.size()==0){
        
        cargarPreguntas();

        for(int i=0;i<listaPreguntas.size();i++){
          
        listaContestadas.add(false);
        } 
          
        }
       //mientras no se llega a la ultima categoria, se avanza////
        if (indexPrimera <listaPreguntas.size()){
        this.totalPreguntas=listaPreguntas.get(indexPrimera).getIdPregunta().getCategoria().getNumeroPreguntas();
        
        this.timeLimit=listaPreguntas.get(indexPrimera).getIdPregunta().getCategoria().getTiempo();
        String lim= String.format("%02d",this.timeLimit);
        minPregunta= 1;
        //initComponents();
        pruebaColor();
        this.jLabelCategoria.setText(listaPreguntas.get(indexPrimera).getIdPregunta().getCategoria().getNombre());
        this.jLabelUser.setText(usr.getNombre()+" "+usr.getApellidos());

        actualizar(0,usr);
        iniciarCrono(this.timeLimit);
        }// se termina el examen
        else{
            ListIterator<UsuarioPregunta> iter = listaPreguntas.listIterator();
            while(iter.hasNext()){
              if(iter.next().getSolucionUser()==null){
                    iter.remove();
                }
            }
            user.setIntentosRealizados(user.getIntentosRealizados()+1);
            user.getLista_preguntas().clear();
            ControladorImp.getInstancia().execute(Evento.AGREGAR_EXAMEN, user);
            user.setLista_preguntas(listaPreguntas);
            ControladorImp.getInstancia().execute(Evento.AGREGAR_EXAMEN, user);
            String resultadoFinal;
             if (calcularPuntuacionFinal()){
                 
                 resultadoFinal="APTO";
             }else{
                 resultadoFinal= "NO APTO";
             }
            JOptionPane.showMessageDialog(null, "Exámen finalizado \n"+resultadoFinal+"\n"+"Consulte con el profesor." ,"Exámen finalizado", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
            
        }
        }else{// modoCorreccion
            
            
          //  initComponents();
            this.jButtonPreguntaSinContestar.setEnabled(false);
            /*this.A.setEnabled(false);
            this.B.setEnabled(false);
            this.C.setEnabled(false);
            this.D.setEnabled(false);*/
            cargarRespuestas();
            this.jLabelCategoria.setText(listaPreguntas.get(indexPrimera).getIdPregunta().getCategoria().getNombre());
            this.jLabelUser.setText(usr.getNombre()+" "+usr.getApellidos());
            totalPreguntas = listaPreguntas.size();
            this.jTextFieldPendientes.setText("0");
            this.jTextFieldNumPregunta.setText(Integer.toString(this.numPregunta));
            actualizar(0,usr);

            
        }
        
         try{
         setIconImage(new ImageIcon(getClass().getResource("finantaxi.png")).getImage());
        }catch(Exception e){
            
        }
        //agregarImagen();
     }
    
    private  boolean correccionMode;
    private  int totalPreguntas;
    private static Usuario user;
    private static ArrayList<Pregunta> listaP = new ArrayList<>();
    private static ArrayList<UsuarioPregunta> listaPreguntas =  new ArrayList<>();
    private static ArrayList<OrdenPregunta> listaOrdenPreguntas =  new ArrayList<>();
    private static ArrayList<Boolean> listaContestadas= new ArrayList<>();
    private  int numPregunta=1;
    private  int preguntasContestadas=0;
    private static int indexPregunta=0;
    private static int indexPrimera=0;
    private  int minPregunta=1;
    private int timeLimit=0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton A;
    private javax.swing.JToggleButton B;
    private javax.swing.JToggleButton C;
    private javax.swing.JToggleButton D;
    private proyectodavid.Presentacion.NoneSelectedButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAnteriorPregunta;
    private javax.swing.JButton jButtonAnteriorPreguntaSin;
    private javax.swing.JButton jButtonPreguntaSinContestar;
    private javax.swing.JButton jButtonSaltar;
    private javax.swing.JButton jButtonSiguientePregunta;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelPruebaImg1;
    private javax.swing.JLabel jLabelPruebaImg2;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private proyectodavid.Presentacion.JPanelConFondo jPanelConFondo1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaPregunta;
    private javax.swing.JTextArea jTextAreaPuntuacion;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextFieldContestadads;
    private javax.swing.JTextField jTextFieldNumPregunta;
    private javax.swing.JTextField jTextFieldPendientes;
    private javax.swing.JTextField jTextFieldPreguntasTotales;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar(int id_evento_vista, Object datos) {
       
        if (!correccionMode){
        
        if (id_evento_vista == 1){   //Avanza
            
           
            if(this.numPregunta==this.totalPreguntas){
                
            }else{
             //incremento el numero de la pregunta y del indice 
             this.numPregunta++;
             indexPregunta++;
            
            }
            
            
        }else if (id_evento_vista == -1){ //retrocede
            
            if (this.numPregunta<=minPregunta){}
            else{
                this.numPregunta--;
                indexPregunta--; 
            }
            
        }	
        this.buttonGroup1.clearSelection();
        this.jLabelPruebaImg1.setIcon(null);
        this.jLabelPruebaImg2.setIcon(null);
        this.jPanelConFondo1.setImagenes(null,null);
        mostrarPregunta();
        cambiaColor();
        this.jTextFieldNumPregunta.setText(String.valueOf(this.numPregunta));
        this.jTextFieldPendientes.setText(String.valueOf(this.totalPreguntas-preguntasContestadas));
        this.jTextFieldPreguntasTotales.setText(String.valueOf(this.totalPreguntas));
        
        
        } 
        else{ //modo correccion
           
             if (id_evento_vista == 1){ 
                 
             if (indexPregunta< totalPreguntas-1)  {  
              indexPregunta++;
              
              if(listaPreguntas.get(indexPregunta).getIdPregunta().getCategoria().getNombre().equalsIgnoreCase(listaPreguntas.get(indexPregunta-1).getIdPregunta().getCategoria().getNombre())){
                  numPregunta++;
              }else{
                  numPregunta=1;
              }
              
             }  
                 
             }else if (id_evento_vista == -1){
                 
              if (indexPregunta>0){   
              indexPregunta-- ;
              
              
              if(listaPreguntas.get(indexPregunta).getIdPregunta().getCategoria().getNombre().equalsIgnoreCase(listaPreguntas.get(indexPregunta+1).getIdPregunta().getCategoria().getNombre())){
                  numPregunta--;
              }else{
                  numPregunta=numeroContestadas(listaPreguntas.get(indexPregunta).getIdPregunta().getCategoria().getNombre());
              }
              }
             }
            this.buttonGroup1.clearSelection();
            
            if(listaPreguntas.get(indexPregunta).getAprobado()){
               this.jTextAreaPuntuacion.setBackground(new java.awt.Color(51,204,0));
                 this.jTextAreaPuntuacion.setText("Apto");
            }else{
              this.jTextAreaPuntuacion.setBackground(Color.red); 
              this.jTextAreaPuntuacion.setText("No Apto");
            }
            String c = listaPreguntas.get(indexPregunta).getIdPregunta().getCategoria().getNombre();
            this.jLabelPruebaImg1.setIcon(null);
            this.jLabelPruebaImg2.setIcon(null);
            this.jLabelCategoria.setText(c);
            this.jPanelConFondo1.setImagenes(null,null);
            this.jTextFieldContestadads.setText(Integer.toString(numeroContestadas(c)));
            this.jTextFieldPreguntasTotales.setText(listaPreguntas.get(indexPregunta).getIdPregunta().getCategoria().getNumeroPreguntas().toString());
            this.jTextFieldNumPregunta.setText(Integer.toString(numPregunta));
            mostrarPreguntaCorrecion();
            mostrarSolucion();
        }
        
        
		
    }
    
    public int numeroContestadas(String categoria){
        int count= 0;
        
        for(UsuarioPregunta ur: listaPreguntas){
          if(categoria.equalsIgnoreCase(ur.getIdPregunta().getCategoria().getNombre())){
              count++;
          }  
        }
        return count;
    }
     private void initComponents2(){

        buttonGroup1 = new proyectodavid.Presentacion.NoneSelectedButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        A = new javax.swing.JToggleButton();
        C = new javax.swing.JToggleButton();
        B = new javax.swing.JToggleButton();
        D = new javax.swing.JToggleButton();
        jPanelConFondo1 = new proyectodavid.Presentacion.JPanelConFondo();
        jLabelPruebaImg1 = new javax.swing.JLabel();
        jLabelPruebaImg2 = new javax.swing.JLabel();
        jButtonPreguntaSinContestar = new javax.swing.JButton();
        jButtonSiguientePregunta = new javax.swing.JButton();
        jButtonAnteriorPregunta = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldNumPregunta = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldPreguntasTotales = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldPendientes = new javax.swing.JTextField();
        jTextFieldContestadads = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabelCategoria = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelUser = new javax.swing.JLabel();
        jTextAreaPuntuacion = new javax.swing.JTextArea();
        jButtonAnteriorPreguntaSin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(1332, 700));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        A.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(A);
        A.setToolTipText("");
        A.setName(""); // NOI18N
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        C.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(C);
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        B.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(B);
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        D.setBackground(new java.awt.Color(245, 245, 245));
        buttonGroup1.add(D);
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        jPanelConFondo1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelConFondo1.setToolTipText("");
        jPanelConFondo1.setMinimumSize(new java.awt.Dimension(649, 459));
        jPanelConFondo1.setPreferredSize(new java.awt.Dimension(649, 459));

        javax.swing.GroupLayout jPanelConFondo1Layout = new javax.swing.GroupLayout(jPanelConFondo1);
        jPanelConFondo1.setLayout(jPanelConFondo1Layout);
        jPanelConFondo1Layout.setHorizontalGroup(
            jPanelConFondo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConFondo1Layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addGroup(jPanelConFondo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelPruebaImg1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelPruebaImg2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelConFondo1Layout.setVerticalGroup(
            jPanelConFondo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConFondo1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabelPruebaImg1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelPruebaImg2)
                .addGap(162, 162, 162))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(C, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(D, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelConFondo1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1341, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelConFondo1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(A, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addComponent(B, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addComponent(C, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addComponent(D, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jPanelConFondo1.getAccessibleContext().setAccessibleName("");

        jButtonPreguntaSinContestar.setText("Siguiente");
        jButtonPreguntaSinContestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreguntaSinContestarActionPerformed(evt);
            }
        });

        jButtonSiguientePregunta.setText("Siguiente");
        jButtonSiguientePregunta.setSize(new java.awt.Dimension(83, 32));
        jButtonSiguientePregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguientePreguntaActionPerformed(evt);
            }
        });

        jButtonAnteriorPregunta.setText("Anterior");
        jButtonAnteriorPregunta.setSize(new java.awt.Dimension(83, 32));
        jButtonAnteriorPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorPreguntaActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tiempo (en minutos)"));

        jLabel2.setText("Transcurrido");

        jLabel3.setText("Restante");

        jTextField1.setEditable(false);

        jTextField2.setEditable(false);

        jTextField3.setEditable(false);

        jLabel9.setText("Total");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(192, 192, 192)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(180, 180, 180)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Preguntas"));

        jLabel11.setText("Pregunta");

        jTextFieldNumPregunta.setEditable(false);

        jLabel12.setText("Totales");

        jTextFieldPreguntasTotales.setEditable(false);

        jLabel13.setText("Pendientes");

        jTextFieldPendientes.setEditable(false);

        jTextFieldContestadads.setEditable(false);

        jLabel14.setText("Contestadas");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNumPregunta)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldPreguntasTotales)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addGap(71, 71, 71)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldContestadads))
                .addGap(58, 58, 58)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldPendientes, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldContestadads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPendientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNumPregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPreguntasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jLabelCategoria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel8.setText("Usuario:");

        jTextAreaPuntuacion.setEditable(false);
        jTextAreaPuntuacion.setColumns(20);
        jTextAreaPuntuacion.setRows(5);
        jTextAreaPuntuacion.setOpaque(false);

        jButtonAnteriorPreguntaSin.setText("Anterior");
        jButtonAnteriorPreguntaSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorPreguntaSinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283)
                .addComponent(jLabelCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(555, 583, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jButtonAnteriorPregunta)
                .addGap(196, 196, 196)
                .addComponent(jButtonSiguientePregunta)
                .addGap(173, 173, 173)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jButtonAnteriorPreguntaSin)
                        .addGap(118, 118, 118)
                        .addComponent(jButtonPreguntaSinContestar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextAreaPuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(625, 625, 625))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelUser, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(jLabelCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextAreaPuntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnteriorPreguntaSin)
                    .addComponent(jButtonSiguientePregunta)
                    .addComponent(jButtonAnteriorPregunta)
                    .addComponent(jButtonPreguntaSinContestar))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>     
    @Override
    public void update(Observable o, Object arg) {
        calcularPuntuacion();
        indexPrimera= indexPrimera + this.totalPreguntas;
        indexPregunta= indexPrimera;
        numPregunta=1;
        preguntasContestadas=0;
        //new Test(user,false).setVisible(true);
        reset(user,false);
        //this.dispose();
        
    }
}
